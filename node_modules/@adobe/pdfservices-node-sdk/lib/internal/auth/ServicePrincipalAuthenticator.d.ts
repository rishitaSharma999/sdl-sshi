import { Authenticator } from "./Authenticator";
import { ServicePrincipalCredentials } from "../../auth/ServicePrincipalCredentials";
import { SessionToken } from "./SessionToken";
import { HttpRequestConfig } from "../http/HttpRequestConfig";
import { ClientConfig } from "../../config/ClientConfig";
export declare class ServicePrincipalAuthenticator implements Authenticator {
    private static IMS_PROXY_TOKEN_ENDPOINT;
    private static TOKEN_ENDPOINT;
    private servicePrincipalCredentials;
    private sessionToken;
    private isRefreshingTokenPromise;
    constructor(servicePrincipalCredentials: ServicePrincipalCredentials, clientConfig: ClientConfig);
    get clientId(): string;
    getSessionToken(requestConfig: HttpRequestConfig): Promise<SessionToken>;
    private isTokenNonNullAndValid;
    refreshSessionToken(requestConfig: HttpRequestConfig): Promise<SessionToken>;
}
