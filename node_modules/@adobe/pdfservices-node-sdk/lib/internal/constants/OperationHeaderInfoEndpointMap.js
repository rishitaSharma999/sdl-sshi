"use strict";
/*
 * Copyright 2024 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationHeaderInfoEndpointMap = void 0;
class OperationHeaderInfoEndpointMap {
    constructor(headerInfo, endpoint) {
        this._headerInfo = headerInfo;
        this._endpoint = endpoint;
    }
    get headerInfo() {
        return this._headerInfo;
    }
    get endpoint() {
        return this._endpoint;
    }
}
exports.OperationHeaderInfoEndpointMap = OperationHeaderInfoEndpointMap;
OperationHeaderInfoEndpointMap.CREATE_PDF = new OperationHeaderInfoEndpointMap("Create PDF Operation", "createpdf");
OperationHeaderInfoEndpointMap.COMBINE_PDF = new OperationHeaderInfoEndpointMap("Combine Files Operation", "combinepdf");
OperationHeaderInfoEndpointMap.EXPORT_PDF = new OperationHeaderInfoEndpointMap("Export PDF Operation", "exportpdf");
OperationHeaderInfoEndpointMap.EXPORT_PDF_TO_IMAGES = new OperationHeaderInfoEndpointMap("Export PDF to Images Operation", "pdftoimages");
OperationHeaderInfoEndpointMap.HTML_TO_PDF = new OperationHeaderInfoEndpointMap("HTML to PDF Operation", "htmltopdf");
OperationHeaderInfoEndpointMap.OCR = new OperationHeaderInfoEndpointMap("OCR Operation", "ocr");
OperationHeaderInfoEndpointMap.COMPRESS_PDF = new OperationHeaderInfoEndpointMap("Compress PDF Operation", "compresspdf");
OperationHeaderInfoEndpointMap.LINEARIZE_PDF = new OperationHeaderInfoEndpointMap("Linearize PDF Operation", "linearizepdf");
OperationHeaderInfoEndpointMap.PROTECT_PDF = new OperationHeaderInfoEndpointMap("Protect PDF Operation", "protectpdf");
OperationHeaderInfoEndpointMap.INSERT_PAGES = new OperationHeaderInfoEndpointMap("Insert Pages Operation", "combinepdf");
OperationHeaderInfoEndpointMap.REPLACE_PAGES = new OperationHeaderInfoEndpointMap("Replace Pages Operation", "combinepdf");
OperationHeaderInfoEndpointMap.REORDER_PAGES = new OperationHeaderInfoEndpointMap("Reorder Pages Operation", "combinepdf");
OperationHeaderInfoEndpointMap.ROTATE_PAGES = new OperationHeaderInfoEndpointMap("Rotate Pages Operation", "pagemanipulation");
OperationHeaderInfoEndpointMap.DELETE_PAGES = new OperationHeaderInfoEndpointMap("Delete Pages Operation", "pagemanipulation");
OperationHeaderInfoEndpointMap.REMOVE_PROTECTION = new OperationHeaderInfoEndpointMap("Remove Protection Operation", "removeprotection");
OperationHeaderInfoEndpointMap.SPLIT_PDF = new OperationHeaderInfoEndpointMap("Split PDF Operation", "splitpdf");
OperationHeaderInfoEndpointMap.MERGE_DOCUMENT = new OperationHeaderInfoEndpointMap("Document Merge Operation", "documentgeneration");
OperationHeaderInfoEndpointMap.EXTRACT_PDF = new OperationHeaderInfoEndpointMap("Extract PDF Operation", "extractpdf");
OperationHeaderInfoEndpointMap.PDF_PROPERTIES = new OperationHeaderInfoEndpointMap("PDF Properties Operation", "pdfproperties");
OperationHeaderInfoEndpointMap.AUTO_TAG = new OperationHeaderInfoEndpointMap("PDF Autotag Operation", "autotag");
OperationHeaderInfoEndpointMap.E_SEAL = new OperationHeaderInfoEndpointMap("Electronic Seal Operation", "electronicseal");
//# sourceMappingURL=OperationHeaderInfoEndpointMap.js.map