"use strict";
/*
 * Copyright 2024 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CertificateCredentialParams = void 0;
class CertificateCredentialParams {
    static getCSCCredentialParams(cscCredential) {
        const cscAuthTokenParams = new CSCAuthTokenParams(cscCredential.authorizationContext.accessToken, cscCredential.authorizationContext.tokenType), cscCredentialAuthParams = new CSCCredentialAuthParams(cscCredential.pin);
        return new CSCCredentialParams(cscCredential.providerName, cscCredential.credentialID, cscAuthTokenParams, cscCredentialAuthParams);
    }
}
exports.CertificateCredentialParams = CertificateCredentialParams;
class CSCCredentialParams extends CertificateCredentialParams {
    constructor(providerName, credentialId, authorizationContext, credentialAuthParameters) {
        super();
        this._providerName = providerName;
        this._credentialId = credentialId;
        this._authorizationContext = authorizationContext;
        this._credentialAuthParameters = credentialAuthParameters;
    }
}
class CSCAuthTokenParams {
    constructor(accessToken, tokenType) {
        this._accessToken = accessToken;
        this._tokenType = tokenType ?? "Bearer";
    }
}
class CSCCredentialAuthParams {
    constructor(pin) {
        this._pin = pin;
    }
}
//# sourceMappingURL=CertificateCredentialParams.js.map