import { FontProperties } from "./FontProperties";
import { InfoDictProperties } from "./InfoDictProperties";
export declare class DocumentProperties {
    private readonly _isXFA;
    private readonly _hasAcroform;
    private readonly _fileSize;
    private readonly _hasEmbeddedFiles;
    private readonly _incrementalSaveCount;
    private readonly _isCertified;
    private readonly _isSigned;
    private readonly _isEncrypted;
    private readonly _isLinearized;
    private readonly _isPortfolio;
    private readonly _isTagged;
    private readonly _isFTPDF;
    private readonly _pageCount;
    private readonly _pdfVersion;
    private readonly _pdfaComplianceLevel;
    private readonly _pdfeComplianceLevel;
    private readonly _pdfuaComplianceLevel;
    private readonly _pdfvtComplianceLevel;
    private readonly _pdfxComplianceLevel;
    private readonly _fonts;
    private readonly _infoDict;
    private readonly _xmp;
    constructor(document: any);
    get isLinearized(): boolean;
    get pdfEComplianceLevel(): string;
    get isTagged(): boolean;
    get isPortfolio(): boolean;
    get isCertified(): boolean;
    get isEncrypted(): boolean;
    get infoDict(): InfoDictProperties | undefined;
    get isFullyTaggedPDF(): boolean;
    get pdfVersion(): string;
    get isAcroform(): boolean;
    get fileSize(): string;
    get isSigned(): boolean;
    get incrementalSaveCount(): number;
    get containsEmbeddedFiles(): boolean;
    get isXFA(): boolean;
    get fonts(): FontProperties[];
    get pdfAComplianceLevel(): string;
    get pdfVTComplianceLevel(): string;
    get pdfXComplianceLevel(): string;
    get pdfUAComplianceLevel(): string;
    get xmpMetadata(): string;
    get pageCount(): number;
}
