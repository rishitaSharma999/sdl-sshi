import { PDFServicesJob } from "./PDFServicesJob";
import { Asset } from "../../io/Asset";
import { CombinePDFParams } from "../params/combinepdf/CombinePDFParams";
import { ExecutionContext } from "../../internal/ExecutionContext";
import { NotifierConfig } from "../../config/notifier/NotifierConfig";
/**
 * A job that combines multiple PDF files into a single PDF file. Allows specifying which pages of the source files
 * to combine.
 *
 * @example
 * Sample Usage:
 * ```js
 *         const readStream1 = fs.createReadStream("<SOURCE_PATH>");
 *         const readStream2 = fs.createReadStream("<SOURCE_PATH>");
 *
 *         const credentials = new ServicePrincipalCredentials({
 *             clientId: process.env.PDF_SERVICES_CLIENT_ID,
 *             clientSecret: process.env.PDF_SERVICES_CLIENT_SECRET
 *         });
 *
 *         const pdfServices = new PDFServices({credentials});
 *
 *         const [inputAsset1, inputAsset2] = await pdfServices.uploadAssets({
 *             streamAssets: [{
 *                 readStream: readStream1,
 *                 mimeType: MimeType.PDF
 *             }, {
 *                 readStream: readStream2,
 *                 mimeType: MimeType.PDF
 *             }]
 *         });
 *
 *         const params = new CombinePDFParams()
 *             .addAsset(inputAsset1)
 *             .addAsset(inputAsset2);
 *
 *         const job = new CombinePDFJob({params});
 *
 *         const pollingURL = await pdfServices.submit({job});
 *
 *         const pdfServicesResponse = await pdfServices.getJobResult({
 *             pollingURL,
 *             resultType: CombinePDFResult
 *         });
 *
 *         const resultAsset = pdfServicesResponse.result.asset;
 *         const streamAsset = await pdfServices.getContent({asset: resultAsset});
 * ```
 */
export declare class CombinePDFJob extends PDFServicesJob {
    private readonly _outputAsset?;
    private readonly _combinePDFParams;
    /**
     * Constructs a new `CombinePDFJob` instance.
     * @param params The parameters for constructing an instance of `CombinePDFJob`.
     * @param params.params {@link CombinePDFParams} object containing the input files and the page ranges to be
     * combined. Cannot be undefined.
     * @param [params.outputAsset] {@link Asset} object representing the output asset.
     * @remarks External assets can be set as output only when input is external asset as well.
     */
    constructor(params: {
        params: CombinePDFParams;
        outputAsset?: Asset;
    });
    /**
     * @hidden
     */
    process(executionContext: ExecutionContext, notifierConfigList?: NotifierConfig[]): Promise<string>;
    private generatePDFServicesAPIRequest;
}
