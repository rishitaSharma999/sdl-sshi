import { PDFServicesJobParams } from "../PDFServicesJobParams";
import { TableStructureType } from "./TableStructureType";
import { ExtractRenditionsElementType } from "./ExtractRenditionsElementType";
import { ExtractElementType } from "./ExtractElementType";
/**
 * Parameters for extract PDF operation using {@link ExtractPDFJob}.
 */
export declare class ExtractPDFParams implements PDFServicesJobParams {
    private readonly _tableStructureType?;
    private readonly _addCharInfo?;
    private readonly _getStylingInfo?;
    private readonly _elementsToExtractRenditions?;
    private readonly _elementsToExtract?;
    /**
     * Construct a new `ExtractPDFParams` instance.
     *
     * @param params - The parameters for constructing an instance of `ExtractPDFParams`.
     * @param [params.tableStructureType] - The {@link TableStructureType} for output type of table structure.
     * Default value is {@link TableStructureType#XLSX XLSX}.
     * @param [params.addCharInfo] - Whether to add character level bounding boxes to output json.
     * Default value is `false`.
     * @param [params.getStylingInfo] - Whether to add styling information to output JSON. Default value is `false`.
     * @param [params.elementsToExtractRenditions] - List of elements whose renditions should be generated.
     * @param [params.elementsToExtract] - List of elements that should be extracted as JSON.
     * Default value is {@link ExtractElementType#TEXT TEXT}.
     */
    constructor(params: {
        tableStructureType?: TableStructureType;
        addCharInfo?: boolean;
        getStylingInfo?: boolean;
        elementsToExtractRenditions?: ExtractRenditionsElementType[];
        elementsToExtract?: ExtractElementType[];
    });
    /**
     * Returns the table structure type.
     *
     * @returns the table structure type.
     */
    get tableStructureType(): TableStructureType | undefined;
    /**
     * Returns `true` if character information is to be added to the resulting JSON.
     *
     * @returns `true` if character information is to be added to the resulting JSON.
     */
    get addCharInfo(): boolean | undefined;
    /**
     * Returns `true` if styling information is to be added to the resulting JSON.
     *
     * @returns `true` if styling information is to be added to the resulting JSON.
     */
    get getStylingInfo(): boolean | undefined;
    /**
     * Returns the elements to extract renditions.
     *
     * @returns the elements to extract renditions.
     */
    get elementsToExtractRenditions(): ExtractRenditionsElementType[] | undefined;
    /**
     * Returns the elements to extract.
     *
     * @returns the elements to extract.
     */
    get elementsToExtract(): ExtractElementType[] | undefined;
}
