import { TSAOptions } from "./TSAOptions";
import { TSABasicAuthCredentials } from "./TSABasicAuthCredentials";
/**
 * Parameters specifying options related to the time stamp authority credentials required for {@link RFC3161TSAOptions}.
 */
export declare class RFC3161TSAOptions implements TSAOptions {
    private readonly _url;
    private readonly _tsaBasicAuthCredentials?;
    /**
     * Constructs a new `RFC3161TSAOptions` instance.
     *
     * @param params - The parameters for constructing an instance of `RFC3161TSAOptions`.
     * @param params.url - The TSA URL to get timestamp token. Cannot be undefined.
     * @param [params.credentialAuthParameters] - The credentials information required to get timestamp token using
     * TSA URL.
     */
    constructor(params: {
        url: string;
        credentialAuthParameters?: TSABasicAuthCredentials;
    });
    /**
     * Returns the TSA URL to get timestamp token.
     *
     * @returns The TSA URL to get timestamp token.
     */
    get url(): string;
    /**
     * Returns the credentials information required to get timestamp token using TSA URL.
     *
     * @returns The credentials information required to get timestamp token using TSA URL.
     */
    get credentialAuthParameters(): TSABasicAuthCredentials | undefined;
}
