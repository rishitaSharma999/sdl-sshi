"use strict";
/*
 * Copyright 2024 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TSABasicAuthCredentials = void 0;
const ValidationUtil_1 = require("../../../internal/util/ValidationUtil");
/**
 * Parameters specifying options related to the time stamp authority credentials required for {@link RFC3161TSAOptions}.
 */
class TSABasicAuthCredentials {
    /**
     * Constructs a new `TSABasicAuthCredentials` instance.
     *
     * @param params - The parameters for constructing an instance of `TSABasicAuthCredentials`.
     * @param params.username - The username required to get the timestamp token. Cannot be undefined.
     * @param params.password - The password required to get the timestamp token. Cannot be undefined.
     */
    constructor(params) {
        ValidationUtil_1.ValidationUtil.validateTSAAuthCredentials(params);
        this._username = params.username;
        this._password = params.password;
    }
    /**
     * Returns the intended username to be used for timestamping.
     *
     * @returns The username
     */
    get username() {
        return this._username;
    }
    /**
     * Returns the intended password to be used for timestamping.
     *
     * @returns The password
     */
    get password() {
        return this._password;
    }
}
exports.TSABasicAuthCredentials = TSABasicAuthCredentials;
//# sourceMappingURL=TSABasicAuthCredentials.js.map