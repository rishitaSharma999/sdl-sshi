"use strict";
/*
 * Copyright 2024 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RFC3161TSAOptions = void 0;
const ValidationUtil_1 = require("../../../internal/util/ValidationUtil");
/**
 * Parameters specifying options related to the time stamp authority credentials required for {@link RFC3161TSAOptions}.
 */
class RFC3161TSAOptions {
    /**
     * Constructs a new `RFC3161TSAOptions` instance.
     *
     * @param params - The parameters for constructing an instance of `RFC3161TSAOptions`.
     * @param params.url - The TSA URL to get timestamp token. Cannot be undefined.
     * @param [params.credentialAuthParameters] - The credentials information required to get timestamp token using
     * TSA URL.
     */
    constructor(params) {
        ValidationUtil_1.ValidationUtil.validateRFC3161TSAOptions(params);
        this._url = params.url;
        this._tsaBasicAuthCredentials = params.credentialAuthParameters;
    }
    /**
     * Returns the TSA URL to get timestamp token.
     *
     * @returns The TSA URL to get timestamp token.
     */
    get url() {
        return this._url;
    }
    /**
     * Returns the credentials information required to get timestamp token using TSA URL.
     *
     * @returns The credentials information required to get timestamp token using TSA URL.
     */
    get credentialAuthParameters() {
        return this._tsaBasicAuthCredentials;
    }
}
exports.RFC3161TSAOptions = RFC3161TSAOptions;
//# sourceMappingURL=RFC3161TSAOptions.js.map