import { PageRange } from "../../internal/params/PageRange";
/**
 * Page ranges of a file, inclusive of start and end page index, where page index starts from 1.
 */
export declare class PageRanges {
    private static readonly RANGES_MAX_LIMIT;
    private readonly _ranges;
    /**
     * Constructs a new PageRanges instance with no pages added.
     */
    constructor();
    /**
     * Adds a single page. Page index starts from 1.
     *
     * @param page - The single page index
     */
    addSinglePage(page: number): PageRanges;
    /**
     * Adds a page range. Page indexes start from 1.
     *
     * @param start - The start page index, inclusive
     * @param end - The end page index, inclusive
     */
    addRange(start: number, end: number): PageRanges;
    /**
     * Adds a page range from {@link start} page index to the last page. Page index starts from 1.
     *
     * @param start - The start page index
     */
    addAllFrom(start: number): PageRanges;
    /**
     * Adds a page range representing all pages.
     */
    addAll(): PageRanges;
    /**
     * @returns string representation of page ranges.
     */
    toString(): string;
    /**
     * @hidden
     */
    validate(): void;
    /**
     * @internal Used internally by this SDK, not intended to be called by clients.
     */
    isEmpty(): boolean;
    /**
     * @internal Used internally by this SDK, not intended to be called by clients.
     */
    get ranges(): PageRange[];
}
