"use strict";
/*
 * Copyright 2024 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Page = void 0;
/**
 * This class provides information about a Page of the specified PDF file, such as page number, height, width etc.
 */
class Page {
    /**
     * Returns a boolean specifying whether the page is scanned.
     *
     * @returns `true` if the page is scanned. False otherwise.
     */
    get isScanned() {
        return this._isScanned;
    }
    /**
     * Returns a boolean specifying whether the page has structure/tagging.
     *
     * @returns `true` if the page has structure/tagging. False otherwise.
     */
    get hasStructure() {
        return this._hasStructure;
    }
    /**
     * Returns a {@link Content} instance that specifies content level properties of the PDF such as number of
     * images, textual content etc.
     *
     * @returns A {@link Content} instance.
     */
    get content() {
        return this._content;
    }
    /**
     * Returns the height of the page.
     *
     * @returns A Double denoting the height of the page.
     */
    get height() {
        return this._height;
    }
    /**
     * Returns the page number of this {@link Page}, starting from 0.
     *
     * @returns An Integer denoting the page number.
     */
    get pageNumber() {
        return this._pageNumber;
    }
    /**
     * Returns the width of the page.
     *
     * @returns A Double denoting the width of the page.
     */
    get width() {
        return this._width;
    }
}
exports.Page = Page;
//# sourceMappingURL=Page.js.map